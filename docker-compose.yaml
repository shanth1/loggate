version: "3.8"

services:
    loggate:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: loggate-service
        ports:
            - "10514:10514/udp"
            - "9091:9091"
        volumes:
            - ./config/config.yaml:/etc/loggate/config.yaml:ro
        restart: unless-stopped
        command: ["/app/loggate_server", "-config", "/etc/loggate/config.yaml"]
        networks:
            - monitoring
        # healthcheck:
        #     test:
        #         [
        #             "CMD",
        #             "wget",
        #             "--spider",
        #             "-q",
        #             "http://localhost:9091/metrics",
        #         ]
        #     interval: 10s
        #     timeout: 5s
        #     retries: 5

    prometheus:
        image: prom/prometheus:v2.47.0
        container_name: prometheus
        ports:
            - "9090:9090"
        volumes:
            - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
            - prometheus_data:/prometheus
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.enable-lifecycle"
        restart: unless-stopped
        networks:
            - monitoring
        depends_on:
            - loggate
            # loggate:
            # condition: service_healthy

    loki:
        image: grafana/loki:2.9.1
        container_name: loki
        ports:
            - "3100:3100"
        volumes:
            - ./loki/loki-config.yaml:/etc/loki/local-config.yaml:ro
            - loki_data:/loki
        command: -config.file=/etc/loki/local-config.yaml
        restart: unless-stopped
        networks:
            - monitoring
        healthcheck:
            test:
                ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
            interval: 10s
            timeout: 5s
            retries: 5

    promtail:
        image: grafana/promtail:2.9.1
        container_name: promtail
        volumes:
            - ./promtail/promtail-config.yaml:/etc/promtail/config.yaml:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - promtail_positions:/tmp/positions
        command: -config.file=/etc/promtail/config.yaml
        restart: unless-stopped
        networks:
            - monitoring
        depends_on:
            loki:
                condition: service_healthy

    grafana:
        image: grafana/grafana:10.1.1
        container_name: grafana
        ports:
            - "3000:3000"
        volumes:
            - grafana_data:/var/lib/grafana
            - ./grafana/provisioning/:/etc/grafana/provisioning/:ro
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
            - GF_USERS_ALLOW_SIGN_UP=false
        restart: unless-stopped
        networks:
            - monitoring
        depends_on:
            - prometheus
            - loki

networks:
    monitoring:
        driver: bridge

volumes:
    prometheus_data:
    loki_data:
    promtail_positions:
    grafana_data:
